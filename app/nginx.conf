worker_processes  ${{NUM_WORKERS}};
error_log stderr notice;
daemon off;
env LAPIS_ENVIRONMENT;

events {
    worker_connections 1024;
}

http {
    include mime.types;

    server {
        listen ${{PORT}};
        lua_code_cache on;

        location / {
        	set $_url "";
            default_type text/html;
            content_by_lua_file "web.lua";
        }

        location /static/ {
            alias static/;
        }

        location /favicon.ico {
          alias static/favicon.ico;
        }

		location /proxy {
		    internal;
		    rewrite_by_lua "
		      local req = ngx.req

		      for k,v in pairs(req.get_headers()) do
		        if k ~= 'content-length' then
		          req.clear_header(k)
		        end
		      end

		      if ngx.ctx.headers then
		        for k,v in pairs(ngx.ctx.headers) do
		          req.set_header(k, v)
		        end
		      end
		    ";

		    #resolver 8.8.8.8;
            resolver 192.168.1.1 valid=30s;
		    proxy_http_version 1.1;
		    proxy_pass $_url;
		}

    }
}
